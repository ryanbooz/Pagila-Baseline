name: 'PostgreSQL Prod Deploy'
 
on:
  pull_request:
    branches:
      - main
    types:
      - closed
      
env:
    SQLFLUFF_DIALECT: postgres
    DOCKER_IMAGE: redgate/flyway
    SCHEMAS: public
 
jobs:
   Deploy-Prod:
    name: Deploy Prod
    runs-on: ubuntu-20.04   
    environment: Production
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.0
      
      - name: Flyway Check
        run: >-
          docker run --rm \
            --volume ${{ github.workspace }}/migrations:/flyway/sql:ro \
            --volume ${{ github.workspace }}/reports:/flyway/reports \
            -e ${{ secrets.FLYWAY_LICENSE_KEY }} \
            "${{ env.DOCKER_IMAGE }}" \
            -licenseKey="${{ secrets.FLYWAY_LICENSE_KEY }}" \
            -url="${{ secrets.DB_PROD_URL }}" \
            -user="${{ secrets.DB_USERNAME }}" \
            -password="${{ secrets.DB_PASSWORD }}" \
            -baselineOnMigrate=true check -changes -code -drift -dryrun -schemas="${{ env.SCHEMAS }}" -outOfOrder=true -connectRetries=10 \
            -check.buildUrl="${{ secrets.DB_BUILD_URL }}" \
            -check.buildUser="${{ secrets.DB_USERNAME }}" \
            -check.buildPassword="${{ secrets.DB_PASSWORD }}" \
            -check.reportFilename="/flyway/reports/report_prod.html"
            
      - name: Get summary
        id: summary
        run: echo ::set-output name=summary::$(build/flyway-summary.sh src/database/reports/report.html.json) >> $GITHUB_OUTPUT

      - name: Upload report
        uses: actions/upload-artifact@v3.0.0
        with:
          name: Database Report
          path: reports/
          
      - name: Prod Info before migrate
        run: >-           
          docker run 
          --volume ${{ github.workspace }}/migrations:/flyway/sql:ro
          "${{ env.DOCKER_IMAGE }}"
          -licenseKey="${{ secrets.FLYWAY_LICENSE_KEY }}" 
          -url="${{ secrets.DB_PROD_URL }}"
          -user="${{ secrets.DB_USERNAME }}"
          -password="${{ secrets.DB_PASSWORD }}" 
          info -schemas="${{ env.SCHEMAS }}"
        
      - name: Migrate Prod
        run: >-
          docker run 
          --volume ${{ github.workspace }}/migrations:/flyway/sql:ro
          "${{ env.DOCKER_IMAGE }}"
          -licenseKey="${{ secrets.FLYWAY_LICENSE_KEY }}" 
          -url="${{ secrets.DB_PROD_URL }}"
          -user="${{ secrets.DB_USERNAME }}"
          -password="${{ secrets.DB_PASSWORD }}" 
          migrate -baselineOnMigrate=true -schemas="${{ env.SCHEMAS }}" -outOfOrder=true
          
      - name: Prod Info after migrate success
        run: >-
          docker run 
          --volume ${{ github.workspace }}/migrations:/flyway/sql:ro
          "${{ env.DOCKER_IMAGE }}"
          -licenseKey="${{ secrets.FLYWAY_LICENSE_KEY }}" 
          -url="${{ secrets.DB_PROD_URL }}"
          -user="${{ secrets.DB_USERNAME }}"
          -password="${{ secrets.DB_PASSWORD }}"
          info -schemas="${{ env.SCHEMAS }}"
