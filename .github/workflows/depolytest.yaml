name: 'PostgreSQL Test Deploy'
 
on:
  pull_request:
    branches:
      - main

env:
    SQLFLUFF_DIALECT: postgres
    DOCKER_IMAGE: redgate/flyway
    SCHEMAS: public
 
jobs:
  Deploy-Test:
    name: Deploy Test
    runs-on: ubuntu-20.04
    environment: Staging
    steps:
      - uses: actions/checkout@v3.0.0
      
      - name: Flyway Check
        run: >-
          docker run --rm \
            --volume ${{ github.workspace }}/migrations:/flyway/sql:ro \
            --volume ${{ github.workspace }}/reports:/flyway/reports \
            -e ${{ secrets.FLYWAY_LICENSE_KEY }} \
            "${{ env.DOCKER_IMAGE }}" \
            -licenseKey="${{ secrets.FLYWAY_LICENSE_KEY }}" \
            -url="${{ secrets.DB_PROD_URL }}" \
            -user="${{ secrets.DB_USERNAME }}" \
            -password="${{ secrets.DB_PASSWORD }}" \
            -baselineOnMigrate=true check -changes -code -drift -dryrun -schemas="${{ env.SCHEMAS }}" -outOfOrder=true -connectRetries=10 \
            -check.buildUrl="${{ secrets.DB_BUILD_URL }}" \
            -check.buildUser="${{ secrets.DB_USERNAME }}" \
            -check.buildPassword="${{ secrets.DB_PASSWORD }}" \
            -check.reportFilename="/flyway/reports/report_prod.html"
   
      - name: Test Info before migration
        run: >-    
          docker run --rm
          --volume ${{ github.workspace }}/migrations:/flyway/sql:ro
          "${{ env.DOCKER_IMAGE }}"
          -licenseKey="${{ secrets.FLYWAY_LICENSE_KEY }}"
          -url="${{ secrets.DB_TEST_URL }}"
          -user="${{ secrets.DB_USERNAME }}"
          -password="${{ secrets.DB_PASSWORD }}"  
          info -schemas="${{ env.SCHEMAS }}"
          
      - name: Migrate Test
        run: >-
          docker run 
          --volume ${{ github.workspace }}/migrations:/flyway/sql:ro
          "${{ env.DOCKER_IMAGE }}"
          -licenseKey="${{ secrets.FLYWAY_LICENSE_KEY }}"
          -url="${{ secrets.DB_TEST_URL }}"
          -user="${{ secrets.DB_USERNAME }}"
          -password="${{ secrets.DB_PASSWORD }}"   
          migrate -baselineOnMigrate=true -schemas="${{ env.SCHEMAS }}" -outOfOrder=true 
          
      - name: Test info after migration
        run: >-
          docker run 
          --volume ${{ github.workspace }}/migrations:/flyway/sql:ro
          "${{ env.DOCKER_IMAGE }}"
          -licenseKey="${{ secrets.FLYWAY_LICENSE_KEY }}"
          -url="${{ secrets.DB_TEST_URL }}"
          -user="${{ secrets.DB_USERNAME }}"
          -password="${{ secrets.DB_PASSWORD }}"   
          info -schemas="${{ env.SCHEMAS }}"

